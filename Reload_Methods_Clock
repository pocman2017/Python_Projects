# Класс форматирования - перевода секунд в нормальный вид
# С перегрузкой операторов

class Clock:
    __Day = 86400 # Число секунд в сутках
    def __init__(self, secs: int):
        if not isinstance(secs, int):
            raise ValueError("Секунды должны быть целым числом !")
        self.__secs = secs % self.__Day

    def getFormatTime(self):
        s = self.__secs % 60 # Секунды
        m = (self.__secs // 60) % 60 # Минуты
        h = (self.__secs // 3600) % 24 # Часы
        return f"{Clock.__getForm(h)}:{Clock.__getForm(m)}:{Clock.__getForm(s)}"

    @staticmethod
    def __getForm(x):
        return str(x) if x > 9 else "0" + str(x)

    def getSeconds(self):
        return self.__secs

# Перегрузка метода. Складываем время 2-х экземпляров класса Clock
    def __add__(self, other):
        if not isinstance(other, Clock):
            raise ArithmeticError("Правый операнд должен быть типом Clock !")

        return Clock(self.__secs + other.getSeconds())

# Перегрузка метода. Складываем (через " += ") время 2-х экземпляров класса Clock
    def __iadd__(self, other):
        if not isinstance(other, Clock):
            raise ArithmeticError("Правый операнд должен быть типом Clock !")

        self.__secs += other.getSeconds()
        return self

# Перегрузка метода. Сравниваем 2 времени
    def __eq__(self, other):
        return self.__secs == other.getSeconds()

c = Clock(140)
print(c.getFormatTime())
c1 = Clock(9000)
c2 = Clock(230)
c3 = c1 + c2
print(c1.getFormatTime())
print(c3.getFormatTime())
с4 = Clock(300)
с5 = Clock(300)
if с4 == с5:
    print("Времена равны !")
